var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.295,1,1.685]],["body/controllers/AppController.html",[0,1.555,1,1.672,2,0.96,3,0.338,4,0.289,5,0.289,6,1.273,7,0.243,8,1.134,9,1.672,10,2.023,11,2.023,12,1.672,13,1.672,14,1.099,15,1.409,16,2.432,17,0.049,18,1.86,19,4.852,20,4.852,21,1.86,22,2.829,23,1.287,24,1.86,25,1.196,26,1.533,27,0.805,28,0.924,29,1.649,30,1.099,31,1.194,32,1.86,33,1.86,34,3.424,35,1.86,36,2.562,37,2.619,38,1.86,39,2.829,40,2.829,41,1.86,42,1.099,43,1.86,44,1.86,45,1.86,46,1.86,47,1.86,48,1.86,49,1.122,50,1.937,51,0.96,52,1.284,53,1.506,54,1.506,55,1.86,56,1.86,57,0.512,58,1.555,59,1.506,60,1.099,61,0.392,62,0.844,63,1.099,64,1.86,65,1.134,66,0.867,67,1.273,68,1.86,69,1.099,70,1.86,71,1.099,72,1.86,73,1.099,74,1.86,75,1.86,76,1.86,77,1.86,78,1.099,79,1.86,80,1.86,81,0.338,82,0.158,83,1.506,84,0.844,85,3.826,86,2.829,87,4.116,88,1.86,89,2.829,90,3.085,91,4.116,92,2.326,93,1.86,94,1.86,95,1.86,96,3.424,97,1.86,98,2.829,99,2.829,100,2.829,101,2.829,102,1.46,103,2.829,104,2.344,105,2.829,106,3.099,107,3.424,108,2.829,109,1.937,110,1.86,111,1.86,112,2.829,113,1.86,114,1.273,115,1.506,116,0.844,117,1.273,118,1.937,119,1.86,120,1.86,121,1.86,122,1.86,123,1.86,124,1.506,125,1.86,126,1.86,127,1.86,128,1.86,129,1.506,130,1.86,131,2.829,132,2.829,133,2.829,134,1.86,135,1.86,136,1.86,137,1.86,138,0.016,139,0.024,140,0.016]],["title/modules/AppModule.html",[141,1.472,142,1.685]],["body/modules/AppModule.html",[1,2.719,2,2.139,3,0.58,4,0.495,5,0.495,17,0.048,49,1.176,57,0.879,58,2.489,59,2.583,81,0.58,82,0.272,138,0.027,139,0.035,140,0.027,141,2.514,142,3.112,143,1.647,144,1.647,145,2.183,146,2.183,147,1.647,148,3.15,149,2.836,150,2.583,151,2.583,152,2.583,153,2.836,154,2.183,155,1.885,156,3.19,157,3.19,158,3.19,159,3.19,160,2.183,161,3.19,162,3.19,163,1.885,164,2.583,165,3.19,166,3.19,167,3.19,168,3.19,169,3.19,170,3.19,171,3.19,172,3.19,173,3.19,174,2.583,175,3.19]],["title/injectables/AppService.html",[58,1.295,176,1.143]],["body/injectables/AppService.html",[3,0.465,4,0.397,5,0.397,7,0.334,8,1.431,9,2.11,10,2.431,11,2.631,12,2.11,13,2.11,14,1.512,15,1.588,17,0.048,23,1.517,25,1.464,26,1.876,27,0.986,28,1.131,29,1.876,30,1.512,31,1.336,36,2.767,42,1.512,49,1.075,50,1.752,51,1.321,52,1.621,57,0.705,58,1.621,60,1.512,61,0.539,62,1.162,65,1.431,66,0.539,67,1.752,81,0.465,82,0.218,84,1.162,92,2.417,114,1.752,117,1.752,118,1.752,138,0.022,139,0.031,140,0.022,163,1.512,176,1.431,177,1.512,178,1.752,179,2.072,180,2.559,181,4.114,182,2.559,183,2.559,184,2.559,185,2.559,186,2.559,187,2.559,188,2.072,189,2.559,190,2.559,191,2.072,192,2.559,193,1.752,194,2.559,195,3.571,196,3.205,197,3.792,198,2.559,199,2.559,200,2.559,201,1.752,202,4.114,203,2.559,204,2.072,205,2.559,206,2.559,207,2.559]],["title/controllers/ConsumerController.html",[0,1.295,208,1.685]],["body/controllers/ConsumerController.html",[0,1.764,2,1.19,3,0.419,4,0.358,5,0.358,7,0.301,8,1.329,9,1.96,10,2.296,11,1.96,12,1.96,13,1.96,14,1.363,15,1.329,16,2.66,17,0.049,23,1.408,25,1.408,26,1.804,27,1.017,28,1.087,29,1.804,30,1.363,31,1.291,36,2.511,37,3.209,42,1.363,49,1.087,50,1.578,51,1.19,52,1.506,53,1.867,54,1.867,57,0.635,60,1.363,61,0.485,62,1.047,65,0.924,66,0.485,81,0.419,82,0.196,83,1.867,84,1.047,92,2.324,118,1.578,138,0.02,139,0.028,140,0.02,163,1.363,196,3.081,197,3.645,201,1.578,208,1.96,209,1.578,210,3.663,211,3.317,212,2.306,213,3.317,214,2.306,215,1.867,216,3.317,217,2.306,218,1.867,219,3.317,220,2.306,221,2.306,222,3.317,223,3.317,224,2.306,225,1.764,226,1.867,227,2.306,228,1.867,229,2.306,230,4.502,231,2.306,232,2.306,233,2.306,234,2.659,235,2.306,236,2.306,237,2.306,238,2.306,239,2.306,240,1.867,241,2.306]],["title/modules/ConsumerModule.html",[141,1.472,242,1.685]],["body/modules/ConsumerModule.html",[2,2.204,3,0.608,4,0.519,5,0.519,17,0.049,49,1.265,57,0.921,81,0.608,82,0.285,138,0.029,139,0.037,140,0.029,141,2.428,143,1.725,144,1.725,145,2.288,146,2.288,147,1.725,148,3.22,149,2.288,153,2.922,154,2.288,155,1.975,164,2.707,208,2.78,225,2.378,226,2.707,242,3.095,243,2.707,244,2.707,245,3.342,246,3.342,247,3.342,248,2.707,249,3.342,250,2.288,251,2.288,252,3.342,253,3.342,254,3.342,255,3.342,256,3.342]],["title/injectables/ConsumerService.html",[176,1.143,225,1.295]],["body/injectables/ConsumerService.html",[3,0.422,4,0.36,5,0.36,7,0.303,8,1.336,9,1.97,10,1.97,11,1.97,12,1.97,13,1.97,14,1.372,15,1.548,17,0.049,23,1.469,25,1.469,26,1.883,27,0.989,28,1.135,29,1.809,30,1.372,31,1.364,36,2.86,37,3.089,42,1.372,49,1.09,52,1.513,57,0.639,60,1.372,61,0.897,62,1.054,65,1.336,66,0.702,81,0.422,82,0.198,84,1.054,92,2.33,114,1.589,115,1.88,116,1.054,117,1.589,124,1.88,129,1.88,138,0.02,139,0.029,140,0.02,176,1.336,177,1.372,179,1.88,188,1.88,193,1.589,196,3.089,201,1.589,204,1.88,210,3.452,215,1.88,218,2.699,225,1.513,234,2.669,240,1.88,250,1.589,257,1.589,258,2.321,259,3.9,260,2.321,261,2.321,262,2.321,263,2.321,264,2.321,265,2.321,266,2.321,267,2.321,268,1.88,269,1.88,270,2.321,271,2.321,272,2.321,273,2.321,274,3.333,275,4.513,276,2.321,277,2.321,278,2.321,279,2.321,280,2.321,281,2.321,282,2.321,283,2.321]],["title/classes/HttpExceptionFilter.html",[69,1.685,82,0.243]],["body/classes/HttpExceptionFilter.html",[3,0.565,4,0.482,5,0.482,7,0.405,8,1.631,17,0.048,23,0.971,25,0.971,26,1.244,27,0.654,28,0.75,29,1.244,49,0.983,57,0.855,65,1.931,66,0.654,69,2.405,81,0.565,82,0.265,90,3.299,102,1.603,104,2.786,109,3.109,138,0.027,139,0.035,140,0.027,155,1.835,284,1.603,285,2.514,286,2.786,287,3.678,288,3.296,289,3.903,290,3.678,291,3.903,292,3.105,293,2.514,294,2.514,295,3.678,296,1.603,297,3.105,298,2.514,299,2.514,300,2.514,301,2.514,302,2.514,303,2.514,304,2.514,305,2.514,306,2.514,307,2.514,308,2.514,309,2.514,310,3.105,311,3.105,312,3.105,313,2.514,314,3.105,315,3.105,316,3.105,317,2.514,318,3.105]],["title/interfaces/Product.html",[61,0.6,319,1.472]],["body/interfaces/Product.html",[3,0.521,4,0.445,5,0.445,7,0.374,17,0.048,27,1.143,28,1.128,31,1.541,61,0.813,81,0.794,116,1.982,138,0.025,139,0.033,140,0.025,319,1.48,320,1.963,321,1.963,322,2.281,323,2.579,324,2.579,325,2.579,326,2.579,327,2.12,328,2.579,329,2.579,330,2.579,331,2.579,332,2.579,333,2.579,334,2.253,335,2.253,336,1.993,337,1.48,338,1.963,339,1.48,340,1.963,341,1.963,342,1.963,343,1.48,344,2.322,345,2.322,346,2.322,347,1.694,348,2.281,349,2.322,350,2.322,351,2.322,352,2.322,353,2.322]],["title/interfaces/Product-1.html",[61,0.506,319,1.241,354,1.421]],["body/interfaces/Product-1.html",[3,0.521,4,0.445,5,0.445,7,0.374,17,0.048,27,1.143,28,1.128,31,1.541,61,0.813,81,0.794,116,1.982,138,0.025,139,0.033,140,0.025,319,1.48,320,1.963,322,2.281,323,2.579,324,2.579,325,2.579,326,2.579,327,2.12,328,2.579,329,2.579,330,2.579,331,2.579,332,2.579,333,2.579,334,2.253,335,2.253,336,1.993,337,1.48,338,1.963,339,1.48,340,1.963,341,1.963,342,1.963,343,1.48,344,2.322,345,2.322,346,2.322,347,1.694,348,2.281,349,2.322,350,2.322,351,2.322,352,2.322,353,2.322,355,1.963]],["title/classes/ProductDto.html",[15,0.892,82,0.243]],["body/classes/ProductDto.html",[3,0.266,4,0.227,5,0.227,7,0.191,15,0.732,16,2.785,17,0.049,23,1.497,25,0.457,27,1.098,28,0.353,31,1.451,49,0.81,51,1.209,61,0.617,62,0.663,66,0.308,73,1.384,78,0.863,81,0.266,82,0.2,84,2.473,102,1.209,116,1.779,138,0.013,139,0.02,140,0.013,160,1,284,0.754,296,0.754,322,1.384,323,1.983,324,1.733,325,1.733,326,1.983,327,1.667,328,1.733,329,1.983,330,1.983,331,1.983,332,1.983,333,2.609,334,1.209,335,1.514,336,2.125,337,0.754,339,0.754,343,0.754,347,0.863,348,0.863,354,1.733,356,1.183,357,3.93,358,1.461,359,1.461,360,1.461,361,1.897,362,1.897,363,1.461,364,2.343,365,1.461,366,1.461,367,1.461,368,1.461,369,1.897,370,1.461,371,1.461,372,1.461,373,1.461,374,1.461,375,2.375,376,1.183,377,1.897,378,2.375,379,1.461,380,1.183,381,2.717,382,1.897,383,2.375,384,1.897,385,1.461,386,1.183,387,2.974,388,1.897,389,2.375,390,1.183,391,1.183,392,1.183,393,1.183,394,0.863,395,2.375,396,3.877,397,1.183,398,1.183,399,2.717,400,1.897,401,1.183,402,1.183,403,1.183,404,1.183,405,1.183,406,1,407,2.375,408,1.183,409,1.897,410,1.897,411,1.897,412,1.897,413,1.183,414,1.183,415,1,416,1.183,417,1.183,418,1.183,419,1.183,420,1.183,421,1.183,422,1.183,423,1.183,424,1,425,1,426,1.603,427,1.183,428,1.183,429,1.183,430,3.747,431,1.183,432,1.897,433,1.897,434,2.514,435,1.183,436,1.461,437,0.863,438,1.183,439,1.461,440,1.183,441,1.183,442,1.183,443,1.183,444,1.183,445,1.183,446,1,447,1,448,1,449,1.183,450,1.183,451,1.897,452,1.183,453,1.183,454,1.183,455,1,456,1.183,457,1.183,458,1,459,1,460,1.183,461,1.183]],["title/classes/ProductDto-1.html",[15,0.752,82,0.205,354,1.421]],["body/classes/ProductDto-1.html",[3,0.238,4,0.204,5,0.204,7,0.171,15,0.671,16,2.702,17,0.048,23,1.455,25,0.41,27,1.079,28,0.317,31,1.483,49,0.76,51,1.108,61,1.008,62,0.595,66,0.452,73,1.268,78,0.775,81,0.238,82,0.183,84,2.444,102,1.108,116,1.787,138,0.011,139,0.018,140,0.011,160,0.897,174,1.738,284,0.677,296,0.677,322,1.268,323,2.052,324,1.86,325,1.86,326,2.052,327,2.245,328,1.86,329,2.052,330,2.052,331,2.052,332,2.204,333,2.585,334,1.108,335,1.406,336,2.258,337,0.677,339,0.677,343,0.677,347,0.775,348,0.775,354,1.61,357,3.768,361,1.738,362,1.738,369,1.062,375,2.206,376,1.062,377,1.738,378,2.206,380,1.062,381,2.812,382,1.738,383,2.55,384,1.738,386,1.062,387,2.812,388,1.738,389,2.206,390,1.062,391,1.062,392,1.062,393,1.062,394,0.775,395,2.206,396,3.768,397,1.062,398,1.062,399,2.55,400,1.738,401,1.062,402,1.062,403,1.062,404,1.062,405,1.062,406,0.897,407,2.206,408,1.062,409,1.738,410,1.738,411,1.738,412,1.738,413,1.062,414,1.062,415,0.897,416,1.062,417,1.062,418,1.062,419,1.062,420,1.062,421,1.062,422,1.062,423,1.062,424,0.897,425,0.897,426,1.469,427,1.062,428,2.206,429,1.062,430,3.628,431,1.738,432,2.55,433,2.55,434,3.234,435,1.062,437,1.268,438,1.738,440,1.062,441,1.062,442,1.062,443,1.062,444,1.062,445,1.738,446,1.469,447,1.469,448,1.469,449,1.062,450,1.062,451,1.738,452,1.738,453,1.738,454,1.738,455,0.897,456,1.738,457,1.738,458,0.897,459,1.469,460,1.062,461,1.062,462,1.062,463,4.572,464,1.311,465,1.311,466,1.311,467,1.311,468,1.311,469,1.311,470,1.311,471,1.311,472,1.311,473,1.311,474,1.311,475,1.311,476,1.311,477,1.311,478,1.311,479,1.311,480,1.311,481,1.311,482,1.311,483,1.311,484,1.311,485,1.311]],["title/injectables/ValidationPipe.html",[63,1.685,176,1.143]],["body/injectables/ValidationPipe.html",[3,0.53,4,0.452,5,0.452,7,0.38,8,1.564,17,0.049,23,1.221,25,1.221,26,1.564,27,0.822,28,0.943,29,1.564,31,0.803,49,1.063,57,0.803,63,2.307,65,1.764,66,0.614,81,0.53,82,0.375,92,2.272,106,2.36,138,0.025,139,0.033,140,0.025,176,1.564,177,1.722,193,3.013,210,3.013,234,1.995,286,1.995,336,1.505,394,1.722,437,1.722,486,2.36,487,3.904,488,3.904,489,3.904,490,2.915,491,4.402,492,4.402,493,3.904,494,2.915,495,4.701,496,2.915,497,3.218,498,3.904,499,2.915,500,2.915,501,2.915,502,2.36,503,2.915,504,3.904,505,2.915,506,2.915,507,2.915,508,2.915,509,2.915,510,2.915,511,2.915,512,2.915,513,2.915]],["title/coverage.html",[514,2.633]],["body/coverage.html",[0,1.753,1,1.694,5,0.445,6,2.643,15,1.207,17,0.048,27,0.604,52,2.279,58,1.302,61,0.813,63,1.694,66,0.604,69,1.694,71,1.694,82,0.398,138,0.025,139,0.033,140,0.025,147,1.993,176,1.749,178,2.643,208,1.694,209,2.643,225,1.302,251,1.963,257,2.643,285,2.322,319,1.993,321,1.963,355,1.963,356,2.322,425,1.963,437,3.315,462,2.322,486,2.322,514,1.963,515,2.867,516,2.867,517,3.861,518,5.131,519,5.285,520,3.861,521,4.67,522,3.861,523,2.322,524,2.643,525,3.861,526,2.867,527,2.643,528,2.322,529,2.867,530,2.867]],["title/dependencies.html",[144,1.764,531,2.405]],["body/dependencies.html",[17,0.049,57,0.964,73,2.067,78,2.067,82,0.374,138,0.03,139,0.038,140,0.03,144,1.806,163,2.067,248,2.833,250,2.395,268,2.833,296,2.269,394,2.067,502,2.833,532,5.04,533,3.498,534,3.498,535,3.498,536,3.498,537,3.498,538,3.498,539,4.395,540,3.498,541,3.498,542,3.498,543,3.498,544,3.498,545,3.498,546,3.498,547,3.498,548,3.498,549,3.498,550,3.498,551,3.498,552,3.498,553,3.498,554,3.498,555,3.498,556,3.498,557,3.498,558,3.498]],["title/miscellaneous/enumerations.html",[559,1.092,560,2.768]],["body/miscellaneous/enumerations.html",[7,0.466,17,0.048,66,1.069,138,0.031,139,0.038,140,0.031,321,2.444,334,2.621,335,2.621,355,2.444,446,3.475,447,3.475,448,3.475,459,3.475,497,3.796,559,1.621,560,2.891,561,5.077]],["title/miscellaneous/functions.html",[559,1.092,562,2.768]],["body/miscellaneous/functions.html",[7,0.548,17,0.042,138,0.036,139,0.042,140,0.036,147,2.856,524,2.874,527,2.874,559,1.906,562,3.4,563,3.975]],["title/index.html",[7,0.314,564,2.405,565,2.405]],["body/index.html",[4,0.491,17,0.048,138,0.027,139,0.035,140,0.027,327,1.435,514,2.164,566,3.161,567,3.161,568,4.118,569,3.161,570,3.161,571,3.161,572,3.161,573,3.161,574,3.161,575,3.161,576,3.161,577,3.161,578,4.581,579,3.161,580,3.161,581,3.161,582,3.161,583,5.256,584,3.161,585,3.161,586,3.161,587,5.161,588,3.161,589,3.161,590,4.118,591,3.161,592,3.161,593,3.161,594,3.161,595,4.118,596,4.118,597,3.161,598,3.161,599,3.161,600,4.118,601,4.118,602,3.161,603,3.161,604,3.161,605,3.161,606,3.161,607,2.56,608,3.161,609,3.161,610,3.161,611,3.161,612,2.56,613,3.161,614,3.161,615,3.161,616,3.161,617,3.161,618,3.161,619,3.161,620,3.161,621,3.161,622,3.161,623,3.161,624,3.161,625,3.161]],["title/modules.html",[143,1.986]],["body/modules.html",[17,0.042,138,0.036,139,0.042,140,0.036,142,2.501,143,2.185,242,2.501,607,3.994,626,4.932,627,4.932,628,4.932]],["title/overview.html",[629,3.115]],["body/overview.html",[2,1.894,17,0.045,58,2.467,138,0.031,139,0.039,140,0.031,141,1.894,142,3.112,143,1.894,144,1.894,145,2.512,146,2.512,147,1.894,148,2.512,149,2.512,150,2.972,151,2.972,152,2.972,153,3.099,154,2.512,155,2.169,177,2.169,225,2.229,242,3.029,243,2.972,244,2.972,284,1.894,320,2.512,406,3.361,415,2.512,424,2.512,629,2.972]],["title/classes/validationExceptionFilter.html",[71,1.685,82,0.243]],["body/classes/validationExceptionFilter.html",[3,0.566,4,0.483,5,0.483,7,0.406,8,1.634,17,0.048,23,0.974,25,0.974,26,1.248,27,0.655,28,0.752,29,1.248,49,0.985,57,0.858,61,0.655,65,1.934,66,0.655,71,2.41,81,0.566,82,0.265,90,2.792,102,2.105,104,2.792,109,3.113,138,0.027,139,0.035,140,0.027,284,1.607,286,2.792,287,3.683,288,3.303,289,3.683,290,3.683,291,3.683,293,2.522,294,2.522,295,3.683,296,1.607,298,2.522,299,2.522,300,2.522,301,2.522,302,2.522,303,2.522,304,2.522,305,2.522,306,2.522,307,2.522,308,2.522,309,2.522,313,2.522,317,2.522,426,2.132,523,2.522,612,2.522,630,3.114,631,3.114,632,3.114,633,3.114,634,3.114,635,3.114,636,3.114,637,3.114,638,3.114,639,3.114]],["title/miscellaneous/variables.html",[559,1.092,640,2.768]],["body/miscellaneous/variables.html",[0,1.915,6,2.245,7,0.428,17,0.047,31,0.903,52,2.514,66,1.116,67,3.192,138,0.028,139,0.036,140,0.028,178,2.245,191,2.656,209,2.245,228,3.416,251,2.887,257,2.245,269,2.656,327,1.489,337,1.693,338,2.245,339,1.693,340,2.245,341,2.245,342,2.245,343,1.693,434,3.629,455,2.245,458,2.245,497,3.629,524,2.245,527,2.245,528,2.656,559,1.489,563,3.416,640,2.656,641,3.28,642,3.28,643,3.28,644,3.28,645,3.28,646,3.28,647,3.28,648,3.28]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"modules/ConsumerModule.html":{},"injectables/ConsumerService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/validationExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":437,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["0'})@isstring()@isnotempty",{"_index":478,"title":{},"body":{"classes/ProductDto-1.html":{}}}],["0.1.13",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":547,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":546,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":545,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":521,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":522,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":526,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":517,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["0})@isnumber()@isnotempty()@min(1",{"_index":480,"title":{},"body":{"classes/ProductDto-1.html":{}}}],["1",{"_index":354,"title":{"interfaces/Product-1.html":{},"classes/ProductDto-1.html":{}},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["1'})@max(100",{"_index":376,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["100",{"_index":378,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["101",{"_index":438,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["2",{"_index":406,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"overview.html":{}}}],["3",{"_index":415,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"overview.html":{}}}],["3.0.2",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":543,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":424,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"overview.html":{}}}],["4.1.4",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":383,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["5.10.13",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":381,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["6.6.3",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["7.0.2",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["again",{"_index":639,"title":{},"body":{"classes/validationExceptionFilter.html":{}}}],["amazing",{"_index":608,"title":{},"body":{"index.html":{}}}],["amqp",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["amqplib",{"_index":544,"title":{},"body":{"dependencies.html":{}}}],["angular",{"_index":577,"title":{},"body":{"index.html":{}}}],["apicreatedresponse",{"_index":74,"title":{},"body":{"controllers/AppController.html":{}}}],["apicreatedresponse({description:'the",{"_index":110,"title":{},"body":{"controllers/AppController.html":{}}}],["apiforbiddenresponse",{"_index":75,"title":{},"body":{"controllers/AppController.html":{}}}],["apiforbiddenresponse({description:'forbidden",{"_index":87,"title":{},"body":{"controllers/AppController.html":{}}}],["apiokresponse",{"_index":76,"title":{},"body":{"controllers/AppController.html":{}}}],["apiokresponse({description:'the",{"_index":85,"title":{},"body":{"controllers/AppController.html":{}}}],["apiproperty",{"_index":396,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["apiproperty({type",{"_index":463,"title":{},"body":{"classes/ProductDto-1.html":{}}}],["apitags",{"_index":77,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('producer",{"_index":79,"title":{},"body":{"controllers/AppController.html":{}}}],["app",{"_index":585,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":574,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":142,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps/.../app.controller.ts",{"_index":641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.service.ts",{"_index":642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../consumer.controller.ts",{"_index":643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../consumer.service.ts",{"_index":644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":563,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../product.interface.ts",{"_index":561,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../product.schema.ts",{"_index":645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/client/src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/client/src/app.controller.ts:26",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/client/src/app.controller.ts:34",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/client/src/app.controller.ts:57",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/client/src/app.controller.ts:68",{"_index":48,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/client/src/app.controller.ts:76",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/client/src/app.module.ts",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/client/src/app.service.ts",{"_index":178,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/client/src/app.service.ts:11",{"_index":182,"title":{},"body":{"injectables/AppService.html":{}}}],["apps/client/src/app.service.ts:15",{"_index":186,"title":{},"body":{"injectables/AppService.html":{}}}],["apps/client/src/app.service.ts:20",{"_index":187,"title":{},"body":{"injectables/AppService.html":{}}}],["apps/client/src/app.service.ts:25",{"_index":184,"title":{},"body":{"injectables/AppService.html":{}}}],["apps/client/src/app.service.ts:31",{"_index":189,"title":{},"body":{"injectables/AppService.html":{}}}],["apps/client/src/app.service.ts:36",{"_index":185,"title":{},"body":{"injectables/AppService.html":{}}}],["apps/client/src/dto/product.dto.ts",{"_index":462,"title":{},"body":{"classes/ProductDto-1.html":{},"coverage.html":{}}}],["apps/client/src/dto/product.dto.ts:108",{"_index":475,"title":{},"body":{"classes/ProductDto-1.html":{}}}],["apps/client/src/dto/product.dto.ts:117",{"_index":477,"title":{},"body":{"classes/ProductDto-1.html":{}}}],["apps/client/src/dto/product.dto.ts:125",{"_index":468,"title":{},"body":{"classes/ProductDto-1.html":{}}}],["apps/client/src/dto/product.dto.ts:29",{"_index":482,"title":{},"body":{"classes/ProductDto-1.html":{}}}],["apps/client/src/dto/product.dto.ts:37",{"_index":471,"title":{},"body":{"classes/ProductDto-1.html":{}}}],["apps/client/src/dto/product.dto.ts:45",{"_index":476,"title":{},"body":{"classes/ProductDto-1.html":{}}}],["apps/client/src/dto/product.dto.ts:54",{"_index":479,"title":{},"body":{"classes/ProductDto-1.html":{}}}],["apps/client/src/dto/product.dto.ts:63",{"_index":470,"title":{},"body":{"classes/ProductDto-1.html":{}}}],["apps/client/src/dto/product.dto.ts:74",{"_index":481,"title":{},"body":{"classes/ProductDto-1.html":{}}}],["apps/client/src/dto/product.dto.ts:82",{"_index":464,"title":{},"body":{"classes/ProductDto-1.html":{}}}],["apps/client/src/dto/product.dto.ts:90",{"_index":466,"title":{},"body":{"classes/ProductDto-1.html":{}}}],["apps/client/src/dto/product.dto.ts:99",{"_index":473,"title":{},"body":{"classes/ProductDto-1.html":{}}}],["apps/client/src/exceptions/httpexception.filter.ts",{"_index":285,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["apps/client/src/exceptions/httpexception.filter.ts:6",{"_index":292,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["apps/client/src/exceptions/validationexception.filte.ts",{"_index":523,"title":{},"body":{"coverage.html":{},"classes/validationExceptionFilter.html":{}}}],["apps/client/src/exceptions/validationexception.filte.ts:6",{"_index":630,"title":{},"body":{"classes/validationExceptionFilter.html":{}}}],["apps/client/src/interfaces/product.interface.ts",{"_index":321,"title":{},"body":{"interfaces/Product.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["apps/client/src/main.ts",{"_index":524,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/client/src/pipes/validation.pipe.ts",{"_index":486,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["apps/client/src/pipes/validation.pipe.ts:19",{"_index":490,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["apps/client/src/pipes/validation.pipe.ts:7",{"_index":496,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["apps/consumer/src/consumer.controller.ts",{"_index":209,"title":{},"body":{"controllers/ConsumerController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/consumer/src/consumer.controller.ts:15",{"_index":217,"title":{},"body":{"controllers/ConsumerController.html":{}}}],["apps/consumer/src/consumer.controller.ts:21",{"_index":220,"title":{},"body":{"controllers/ConsumerController.html":{}}}],["apps/consumer/src/consumer.controller.ts:27",{"_index":212,"title":{},"body":{"controllers/ConsumerController.html":{}}}],["apps/consumer/src/consumer.controller.ts:33",{"_index":224,"title":{},"body":{"controllers/ConsumerController.html":{}}}],["apps/consumer/src/consumer.controller.ts:38",{"_index":214,"title":{},"body":{"controllers/ConsumerController.html":{}}}],["apps/consumer/src/consumer.module.ts",{"_index":245,"title":{},"body":{"modules/ConsumerModule.html":{}}}],["apps/consumer/src/consumer.service.ts",{"_index":257,"title":{},"body":{"injectables/ConsumerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/consumer/src/consumer.service.ts:15",{"_index":264,"title":{},"body":{"injectables/ConsumerService.html":{}}}],["apps/consumer/src/consumer.service.ts:20",{"_index":265,"title":{},"body":{"injectables/ConsumerService.html":{}}}],["apps/consumer/src/consumer.service.ts:25",{"_index":262,"title":{},"body":{"injectables/ConsumerService.html":{}}}],["apps/consumer/src/consumer.service.ts:31",{"_index":266,"title":{},"body":{"injectables/ConsumerService.html":{}}}],["apps/consumer/src/consumer.service.ts:35",{"_index":263,"title":{},"body":{"injectables/ConsumerService.html":{}}}],["apps/consumer/src/consumer.service.ts:9",{"_index":260,"title":{},"body":{"injectables/ConsumerService.html":{}}}],["apps/consumer/src/dto/product.dto.ts",{"_index":356,"title":{},"body":{"classes/ProductDto.html":{},"coverage.html":{}}}],["apps/consumer/src/dto/product.dto.ts:108",{"_index":370,"title":{},"body":{"classes/ProductDto.html":{}}}],["apps/consumer/src/dto/product.dto.ts:117",{"_index":372,"title":{},"body":{"classes/ProductDto.html":{}}}],["apps/consumer/src/dto/product.dto.ts:125",{"_index":363,"title":{},"body":{"classes/ProductDto.html":{}}}],["apps/consumer/src/dto/product.dto.ts:29",{"_index":385,"title":{},"body":{"classes/ProductDto.html":{}}}],["apps/consumer/src/dto/product.dto.ts:37",{"_index":366,"title":{},"body":{"classes/ProductDto.html":{}}}],["apps/consumer/src/dto/product.dto.ts:45",{"_index":371,"title":{},"body":{"classes/ProductDto.html":{}}}],["apps/consumer/src/dto/product.dto.ts:54",{"_index":373,"title":{},"body":{"classes/ProductDto.html":{}}}],["apps/consumer/src/dto/product.dto.ts:63",{"_index":365,"title":{},"body":{"classes/ProductDto.html":{}}}],["apps/consumer/src/dto/product.dto.ts:74",{"_index":379,"title":{},"body":{"classes/ProductDto.html":{}}}],["apps/consumer/src/dto/product.dto.ts:82",{"_index":358,"title":{},"body":{"classes/ProductDto.html":{}}}],["apps/consumer/src/dto/product.dto.ts:90",{"_index":359,"title":{},"body":{"classes/ProductDto.html":{}}}],["apps/consumer/src/dto/product.dto.ts:99",{"_index":368,"title":{},"body":{"classes/ProductDto.html":{}}}],["apps/consumer/src/interfaces/product.interface.ts",{"_index":355,"title":{},"body":{"interfaces/Product-1.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["apps/consumer/src/main.ts",{"_index":527,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/consumer/src/schemas/product.schema.ts",{"_index":528,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appservice",{"_index":58,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arbitrary",{"_index":416,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["argumentmetadata",{"_index":495,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["argumentshost",{"_index":291,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/validationExceptionFilter.html":{}}}],["argumentshost,badrequestexception,httpexception",{"_index":631,"title":{},"body":{"classes/validationExceptionFilter.html":{}}}],["array",{"_index":512,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["assume",{"_index":427,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["async",{"_index":210,"title":{},"body":{"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{},"injectables/ValidationPipe.html":{}}}],["author",{"_index":618,"title":{},"body":{"index.html":{}}}],["await",{"_index":234,"title":{},"body":{"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{},"injectables/ValidationPipe.html":{}}}],["backers",{"_index":609,"title":{},"body":{"index.html":{}}}],["bad",{"_index":311,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["badrequestexception",{"_index":499,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["badrequestexception('validation",{"_index":509,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["being",{"_index":401,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["between",{"_index":382,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["body",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"controllers/ConsumerController.html":{}}}],["boolean",{"_index":492,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["bootstrap",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"modules/ConsumerModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["brand",{"_index":323,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["brand:string",{"_index":342,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":628,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":626,"title":{},"body":{"modules.html":{}}}],["building",{"_index":569,"title":{},"body":{"index.html":{}}}],["business",{"_index":411,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["catch",{"_index":109,"title":{},"body":{"controllers/AppController.html":{},"classes/HttpExceptionFilter.html":{},"classes/validationExceptionFilter.html":{}}}],["catch(badrequestexception",{"_index":632,"title":{},"body":{"classes/validationExceptionFilter.html":{}}}],["catch(exception",{"_index":288,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/validationExceptionFilter.html":{}}}],["catch(httpexception",{"_index":297,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["characters",{"_index":431,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["charactors",{"_index":384,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["check",{"_index":313,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/validationExceptionFilter.html":{}}}],["class",{"_index":82,"title":{"classes/HttpExceptionFilter.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"classes/validationExceptionFilter.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"modules/ConsumerModule.html":{},"injectables/ConsumerService.html":{},"classes/HttpExceptionFilter.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"classes/validationExceptionFilter.html":{}}}],["classes",{"_index":284,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"overview.html":{},"classes/validationExceptionFilter.html":{}}}],["client",{"_index":183,"title":{},"body":{"injectables/AppService.html":{}}}],["client:clientproxy",{"_index":194,"title":{},"body":{"injectables/AppService.html":{}}}],["clientproxy",{"_index":181,"title":{},"body":{"injectables/AppService.html":{}}}],["clientsmodule",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["clientsmodule.register",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster_appmodule",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_exports",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_consumermodule",{"_index":243,"title":{},"body":{"modules/ConsumerModule.html":{},"overview.html":{}}}],["cluster_consumermodule_providers",{"_index":244,"title":{},"body":{"modules/ConsumerModule.html":{},"overview.html":{}}}],["code",{"_index":132,"title":{},"body":{"controllers/AppController.html":{}}}],["color",{"_index":324,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["color:string",{"_index":343,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"miscellaneous/variables.html":{}}}],["condition",{"_index":325,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["condition:productcondition",{"_index":347,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["condition:string",{"_index":648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configmodule",{"_index":247,"title":{},"body":{"modules/ConsumerModule.html":{}}}],["configmodule.forroot({isglobal:true",{"_index":253,"title":{},"body":{"modules/ConsumerModule.html":{}}}],["connection",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["const",{"_index":65,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/ValidationPipe.html":{},"classes/validationExceptionFilter.html":{}}}],["constructor",{"_index":179,"title":{},"body":{"injectables/AppService.html":{},"injectables/ConsumerService.html":{}}}],["constructor(@inject('products",{"_index":192,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(@injectmodel('product",{"_index":270,"title":{},"body":{"injectables/ConsumerService.html":{}}}],["constructor(client",{"_index":180,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(private",{"_index":83,"title":{},"body":{"controllers/AppController.html":{},"controllers/ConsumerController.html":{}}}],["constructor(productmodel",{"_index":258,"title":{},"body":{"injectables/ConsumerService.html":{}}}],["consumer.controller",{"_index":246,"title":{},"body":{"modules/ConsumerModule.html":{}}}],["consumer.service",{"_index":226,"title":{},"body":{"controllers/ConsumerController.html":{},"modules/ConsumerModule.html":{}}}],["consumercontroller",{"_index":208,"title":{"controllers/ConsumerController.html":{}},"body":{"controllers/ConsumerController.html":{},"modules/ConsumerModule.html":{},"coverage.html":{}}}],["consumermodule",{"_index":242,"title":{"modules/ConsumerModule.html":{}},"body":{"modules/ConsumerModule.html":{},"modules.html":{},"overview.html":{}}}],["consumers",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["consumerservice",{"_index":225,"title":{"injectables/ConsumerService.html":{}},"body":{"controllers/ConsumerController.html":{},"modules/ConsumerModule.html":{},"injectables/ConsumerService.html":{},"coverage.html":{},"overview.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/ConsumerController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ConsumerController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ConsumerController.html":{},"modules/ConsumerModule.html":{},"overview.html":{}}}],["correct",{"_index":318,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["correctly",{"_index":635,"title":{},"body":{"classes/validationExceptionFilter.html":{}}}],["coverage",{"_index":514,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{}}}],["create(@body(validationpipe",{"_index":113,"title":{},"body":{"controllers/AppController.html":{}}}],["create(productdto",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{}}}],["create(productdto:productdto",{"_index":201,"title":{},"body":{"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{}}}],["created",{"_index":111,"title":{},"body":{"controllers/AppController.html":{}}}],["created'})@apiforbiddenresponse({description",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["ctx",{"_index":298,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/validationExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":301,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/validationExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":300,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/validationExceptionFilter.html":{}}}],["currency",{"_index":326,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["currency:string",{"_index":340,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":102,"title":{},"body":{"controllers/AppController.html":{},"classes/HttpExceptionFilter.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"classes/validationExceptionFilter.html":{}}}],["database",{"_index":403,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["date().toisostring",{"_index":307,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/validationExceptionFilter.html":{}}}],["declarations",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/ConsumerModule.html":{},"overview.html":{}}}],["decorators",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"controllers/ConsumerController.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["default",{"_index":434,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"miscellaneous/variables.html":{}}}],["default:'0",{"_index":483,"title":{},"body":{"classes/ProductDto-1.html":{}}}],["default:'100",{"_index":436,"title":{},"body":{"classes/ProductDto.html":{}}}],["default:'male",{"_index":449,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["default:'new",{"_index":460,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["default:'try",{"_index":484,"title":{},"body":{"classes/ProductDto-1.html":{}}}],["default:'white",{"_index":442,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["default:0",{"_index":485,"title":{},"body":{"classes/ProductDto-1.html":{}}}],["default:1",{"_index":439,"title":{},"body":{"classes/ProductDto.html":{}}}],["defined",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{},"classes/HttpExceptionFilter.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"injectables/ValidationPipe.html":{},"classes/validationExceptionFilter.html":{}}}],["delete",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{}}}],["delete(':id",{"_index":126,"title":{},"body":{"controllers/AppController.html":{}}}],["delete(':id')@apiokresponse({description",{"_index":32,"title":{},"body":{"controllers/AppController.html":{}}}],["delete(@param('id",{"_index":128,"title":{},"body":{"controllers/AppController.html":{}}}],["delete(id",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{}}}],["delete(id:string",{"_index":206,"title":{},"body":{"injectables/AppService.html":{}}}],["delete(id:string):promise",{"_index":240,"title":{},"body":{"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{}}}],["deleted",{"_index":127,"title":{},"body":{"controllers/AppController.html":{}}}],["deleted'})@apiforbiddenresponse({description",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["delivered",{"_index":86,"title":{},"body":{"controllers/AppController.html":{}}}],["delivered'})@apiforbiddenresponse({description",{"_index":40,"title":{},"body":{"controllers/AppController.html":{}}}],["dependencies",{"_index":144,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ConsumerModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":404,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["depends",{"_index":420,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["description",{"_index":327,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["description:\"oops",{"_index":633,"title":{},"body":{"classes/validationExceptionFilter.html":{}}}],["description:'gender",{"_index":444,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["description:'product",{"_index":430,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["development",{"_index":586,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":425,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"coverage.html":{}}}],["done",{"_index":275,"title":{},"body":{"injectables/ConsumerService.html":{}}}],["dotenv",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["dto/product.dto",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{}}}],["due",{"_index":410,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["durable",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["e2e",{"_index":597,"title":{},"body":{"index.html":{}}}],["each",{"_index":361,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["efficient",{"_index":570,"title":{},"body":{"index.html":{}}}],["empty",{"_index":407,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["entered",{"_index":317,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/validationExceptionFilter.html":{}}}],["enum",{"_index":348,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["enumerations",{"_index":560,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["errors",{"_index":506,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["errors.length",{"_index":508,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["exceed",{"_index":377,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["exception",{"_index":293,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/validationExceptionFilter.html":{}}}],["exception.getstatus",{"_index":302,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/validationExceptionFilter.html":{}}}],["exceptionfilter",{"_index":287,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/validationExceptionFilter.html":{}}}],["exceptions",{"_index":68,"title":{},"body":{"controllers/AppController.html":{}}}],["exceptions/httpexception.filter",{"_index":70,"title":{},"body":{"controllers/AppController.html":{}}}],["exceptions/validationexception.filte",{"_index":72,"title":{},"body":{"controllers/AppController.html":{}}}],["export",{"_index":81,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"modules/ConsumerModule.html":{},"injectables/ConsumerService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"injectables/ValidationPipe.html":{},"classes/validationExceptionFilter.html":{}}}],["exports",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/ConsumerModule.html":{},"overview.html":{}}}],["exports:[appservice",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["express",{"_index":296,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"dependencies.html":{},"classes/validationExceptionFilter.html":{}}}],["failed",{"_index":510,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["false",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"classes/ProductDto-1.html":{}}}],["female",{"_index":447,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"miscellaneous/enumerations.html":{}}}],["female=\"female",{"_index":350,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{}}}],["fields",{"_index":426,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"classes/validationExceptionFilter.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"modules/ConsumerModule.html":{},"injectables/ConsumerService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"classes/validationExceptionFilter.html":{}}}],["forbidden",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["forbidden'})@usefilters(validationexceptionfilter",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["found",{"_index":103,"title":{},"body":{"controllers/AppController.html":{}}}],["found',httpstatus.bad_request",{"_index":137,"title":{},"body":{"controllers/AppController.html":{}}}],["found',httpstatus.not_found",{"_index":108,"title":{},"body":{"controllers/AppController.html":{}}}],["framework",{"_index":568,"title":{},"body":{"index.html":{}}}],["function",{"_index":525,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":562,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":328,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["gender:productfor",{"_index":344,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{}}}],["gender:string",{"_index":647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get(':id",{"_index":94,"title":{},"body":{"controllers/AppController.html":{}}}],["get(':id')@apiokresponse({description",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@apiokresponse({description",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["getall",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{}}}],["getall():promise",{"_index":88,"title":{},"body":{"controllers/AppController.html":{}}}],["getall(msg",{"_index":215,"title":{},"body":{"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{}}}],["getall(msg:string):product",{"_index":273,"title":{},"body":{"injectables/ConsumerService.html":{}}}],["getall(msg:string):promise",{"_index":229,"title":{},"body":{"controllers/ConsumerController.html":{}}}],["getone",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{}}}],["getone(@param('id",{"_index":95,"title":{},"body":{"controllers/AppController.html":{}}}],["getone(id",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{}}}],["getone(id:string",{"_index":199,"title":{},"body":{"injectables/AppService.html":{}}}],["getone(id:string):product",{"_index":277,"title":{},"body":{"injectables/ConsumerService.html":{}}}],["getone(id:string):promise",{"_index":232,"title":{},"body":{"controllers/ConsumerController.html":{}}}],["getting",{"_index":564,"title":{"index.html":{}},"body":{}}],["gloabal",{"_index":452,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["greater",{"_index":432,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["grow",{"_index":604,"title":{},"body":{"index.html":{}}}],["gtin",{"_index":329,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["gtin:string",{"_index":455,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"miscellaneous/variables.html":{}}}],["gtin?:string",{"_index":345,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{}}}],["heavily",{"_index":575,"title":{},"body":{"index.html":{}}}],["here",{"_index":615,"title":{},"body":{"index.html":{}}}],["host",{"_index":290,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/validationExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":299,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/validationExceptionFilter.html":{}}}],["httpexception",{"_index":289,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/validationExceptionFilter.html":{}}}],["httpexception('bad",{"_index":134,"title":{},"body":{"controllers/AppController.html":{}}}],["httpexception('product",{"_index":107,"title":{},"body":{"controllers/AppController.html":{}}}],["httpexception,httpstatus",{"_index":56,"title":{},"body":{"controllers/AppController.html":{}}}],["httpexceptionfilter",{"_index":69,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"controllers/AppController.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://nestjs.com",{"_index":622,"title":{},"body":{"index.html":{}}}],["httpstatus.bad_request",{"_index":133,"title":{},"body":{"controllers/AppController.html":{}}}],["httpstatus.not_found",{"_index":105,"title":{},"body":{"controllers/AppController.html":{}}}],["id",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{}}}],["id:string):promise",{"_index":96,"title":{},"body":{"controllers/AppController.html":{}}}],["identifier",{"_index":515,"title":{},"body":{"coverage.html":{}}}],["if(res",{"_index":99,"title":{},"body":{"controllers/AppController.html":{}}}],["implements",{"_index":286,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/ValidationPipe.html":{},"classes/validationExceptionFilter.html":{}}}],["import",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"modules/ConsumerModule.html":{},"injectables/ConsumerService.html":{},"classes/HttpExceptionFilter.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"injectables/ValidationPipe.html":{},"classes/validationExceptionFilter.html":{}}}],["important",{"_index":637,"title":{},"body":{"classes/validationExceptionFilter.html":{}}}],["importing",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["imports",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/ConsumerModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/validationExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"modules/ConsumerModule.html":{},"injectables/ConsumerService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"injectables/ValidationPipe.html":{},"classes/validationExceptionFilter.html":{}}}],["inject",{"_index":190,"title":{},"body":{"injectables/AppService.html":{}}}],["injectable",{"_index":176,"title":{"injectables/AppService.html":{},"injectables/ConsumerService.html":{},"injectables/ValidationPipe.html":{}},"body":{"injectables/AppService.html":{},"injectables/ConsumerService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["injectables",{"_index":177,"title":{},"body":{"injectables/AppService.html":{},"injectables/ConsumerService.html":{},"injectables/ValidationPipe.html":{},"overview.html":{}}}],["injectmodel",{"_index":267,"title":{},"body":{"injectables/ConsumerService.html":{}}}],["inputs",{"_index":314,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["inspired",{"_index":576,"title":{},"body":{"index.html":{}}}],["installation",{"_index":582,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":584,"title":{},"body":{"index.html":{}}}],["interested",{"_index":413,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["interface",{"_index":319,"title":{"interfaces/Product.html":{},"interfaces/Product-1.html":{}},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{},"coverage.html":{}}}],["interfaces",{"_index":320,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{},"overview.html":{}}}],["interfaces/product.interface",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["is_enum",{"_index":390,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["isenum",{"_index":386,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["isenum(productcondition",{"_index":360,"title":{},"body":{"classes/ProductDto.html":{}}}],["isenum(productcondition,{each:true",{"_index":461,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["isenum(productfor",{"_index":367,"title":{},"body":{"classes/ProductDto.html":{}}}],["isenum(productfor,{each:true",{"_index":450,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["isnotempty",{"_index":387,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["isnumber",{"_index":388,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["isnumber()@isnotempty()@min(1",{"_index":374,"title":{},"body":{"classes/ProductDto.html":{}}}],["isoptional",{"_index":389,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["isstring",{"_index":357,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["isstring()@isnotempty",{"_index":364,"title":{},"body":{"classes/ProductDto.html":{}}}],["isstring()@isnotempty()@length(5",{"_index":380,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["isstring()@isoptional",{"_index":369,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["item",{"_index":453,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["job",{"_index":196,"title":{},"body":{"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{}}}],["join",{"_index":611,"title":{},"body":{"index.html":{}}}],["json",{"_index":304,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/validationExceptionFilter.html":{}}}],["kamil",{"_index":619,"title":{},"body":{"index.html":{}}}],["legend",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/ConsumerModule.html":{},"overview.html":{}}}],["length",{"_index":391,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["length(5,50,{message:'title",{"_index":435,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["less",{"_index":433,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["license",{"_index":625,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":601,"title":{},"body":{"index.html":{}}}],["link",{"_index":330,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["link:string",{"_index":338,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":39,"title":{},"body":{"controllers/AppController.html":{}}}],["literal",{"_index":222,"title":{},"body":{"controllers/ConsumerController.html":{}}}],["logger",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger('client",{"_index":67,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"miscellaneous/variables.html":{}}}],["logger('consumer",{"_index":228,"title":{},"body":{"controllers/ConsumerController.html":{},"miscellaneous/variables.html":{}}}],["logger('consumer_service",{"_index":269,"title":{},"body":{"injectables/ConsumerService.html":{},"miscellaneous/variables.html":{}}}],["logger.log('get",{"_index":89,"title":{},"body":{"controllers/AppController.html":{}}}],["logger.log('sending",{"_index":195,"title":{},"body":{"injectables/AppService.html":{}}}],["logger.log(`delete",{"_index":129,"title":{},"body":{"controllers/AppController.html":{},"injectables/ConsumerService.html":{}}}],["logger.log(`get",{"_index":274,"title":{},"body":{"injectables/ConsumerService.html":{}}}],["logger.log(`invalid",{"_index":131,"title":{},"body":{"controllers/AppController.html":{}}}],["logger.log(`picking",{"_index":230,"title":{},"body":{"controllers/ConsumerController.html":{}}}],["logger.log(`post",{"_index":115,"title":{},"body":{"controllers/AppController.html":{},"injectables/ConsumerService.html":{}}}],["logger.log(`put",{"_index":124,"title":{},"body":{"controllers/AppController.html":{},"injectables/ConsumerService.html":{}}}],["logger.log(`requseted",{"_index":101,"title":{},"body":{"controllers/AppController.html":{}}}],["logger.log(`sending",{"_index":202,"title":{},"body":{"injectables/AppService.html":{}}}],["logic",{"_index":412,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["make",{"_index":315,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["male",{"_index":446,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"miscellaneous/enumerations.html":{}}}],["male'})@isenum(productfor",{"_index":472,"title":{},"body":{"classes/ProductDto-1.html":{}}}],["male=\"male",{"_index":349,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{}}}],["manager",{"_index":542,"title":{},"body":{"dependencies.html":{}}}],["manufacturing",{"_index":456,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["matching",{"_index":139,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"modules/ConsumerModule.html":{},"injectables/ConsumerService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/validationExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":392,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["max(100,{message:'quantity",{"_index":441,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["maximum",{"_index":418,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["mentioned",{"_index":405,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["message",{"_index":375,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["message:'invalid",{"_index":310,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["messagepattern",{"_index":227,"title":{},"body":{"controllers/ConsumerController.html":{}}}],["messagepattern('create",{"_index":211,"title":{},"body":{"controllers/ConsumerController.html":{}}}],["messagepattern('delete",{"_index":213,"title":{},"body":{"controllers/ConsumerController.html":{}}}],["messagepattern('getall",{"_index":216,"title":{},"body":{"controllers/ConsumerController.html":{}}}],["messagepattern('getone",{"_index":219,"title":{},"body":{"controllers/ConsumerController.html":{}}}],["messagepattern('update",{"_index":223,"title":{},"body":{"controllers/ConsumerController.html":{}}}],["messages",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["metadata",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["metatype",{"_index":491,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/ValidationPipe.html":{},"classes/validationExceptionFilter.html":{}}}],["min",{"_index":393,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["min(1,{message:'quantity",{"_index":440,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["minimum",{"_index":417,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["miscellaneous",{"_index":559,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missed",{"_index":636,"title":{},"body":{"classes/validationExceptionFilter.html":{}}}],["mit",{"_index":600,"title":{},"body":{"index.html":{}}}],["mode",{"_index":590,"title":{},"body":{"index.html":{}}}],["model",{"_index":259,"title":{},"body":{"injectables/ConsumerService.html":{}}}],["module",{"_index":141,"title":{"modules/AppModule.html":{},"modules/ConsumerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConsumerModule.html":{},"overview.html":{}}}],["modules",{"_index":143,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ConsumerModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":268,"title":{},"body":{"injectables/ConsumerService.html":{},"dependencies.html":{}}}],["mongoose.schema",{"_index":646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":249,"title":{},"body":{"modules/ConsumerModule.html":{}}}],["mongoosemodule.forfeature([{name:'product',schema:productschema",{"_index":256,"title":{},"body":{"modules/ConsumerModule.html":{}}}],["mongoosemodule.forroot(process.env.mongo_uri",{"_index":254,"title":{},"body":{"modules/ConsumerModule.html":{}}}],["more",{"_index":614,"title":{},"body":{"index.html":{}}}],["mpn",{"_index":331,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["mpn:string",{"_index":458,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"miscellaneous/variables.html":{}}}],["mpn?:string",{"_index":346,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{}}}],["msg",{"_index":218,"title":{},"body":{"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{}}}],["myśliwiec",{"_index":620,"title":{},"body":{"index.html":{}}}],["name",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/ValidationPipe.html":{},"classes/validationExceptionFilter.html":{}}}],["name:'products",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["nest",{"_index":578,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":624,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"modules/ConsumerModule.html":{},"injectables/ConsumerService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{},"classes/validationExceptionFilter.html":{}}}],["nestjs/config",{"_index":248,"title":{},"body":{"modules/ConsumerModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["nestjs/microservices",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":250,"title":{},"body":{"modules/ConsumerModule.html":{},"injectables/ConsumerService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":78,"title":{},"body":{"controllers/AppController.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"dependencies.html":{}}}],["new",{"_index":66,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{},"classes/HttpExceptionFilter.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"classes/validationExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["new'})@isenum(productcondition",{"_index":467,"title":{},"body":{"classes/ProductDto-1.html":{}}}],["new=\"new",{"_index":352,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{}}}],["newproduct",{"_index":279,"title":{},"body":{"injectables/ConsumerService.html":{}}}],["newproduct.save",{"_index":281,"title":{},"body":{"injectables/ConsumerService.html":{}}}],["node.js",{"_index":567,"title":{},"body":{"index.html":{}}}],["npm",{"_index":583,"title":{},"body":{"index.html":{}}}],["number",{"_index":336,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"injectables/ValidationPipe.html":{}}}],["number'})@isstring()@isoptional",{"_index":474,"title":{},"body":{"classes/ProductDto-1.html":{}}}],["object",{"_index":504,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["open",{"_index":602,"title":{},"body":{"index.html":{}}}],["optional",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"injectables/ValidationPipe.html":{},"classes/validationExceptionFilter.html":{}}}],["options",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["others",{"_index":312,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["out",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/ConsumerModule.html":{},"classes/HttpExceptionFilter.html":{},"overview.html":{}}}],["overview",{"_index":629,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":531,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"controllers/ConsumerController.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{},"classes/HttpExceptionFilter.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"injectables/ValidationPipe.html":{},"classes/validationExceptionFilter.html":{}}}],["part",{"_index":457,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["path",{"_index":308,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/validationExceptionFilter.html":{}}}],["per",{"_index":429,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["pipes/validation.pipe",{"_index":64,"title":{},"body":{"controllers/AppController.html":{}}}],["pipetransform",{"_index":498,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass",{"_index":501,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass(metatype",{"_index":505,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["please",{"_index":612,"title":{},"body":{"index.html":{},"classes/validationExceptionFilter.html":{}}}],["post",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{}}}],["post()@apicreatedresponse({description",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["postdata",{"_index":118,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{}}}],["postdata.id",{"_index":237,"title":{},"body":{"controllers/ConsumerController.html":{}}}],["postdata.productdto",{"_index":239,"title":{},"body":{"controllers/ConsumerController.html":{}}}],["price",{"_index":332,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["price:string",{"_index":339,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":193,"title":{},"body":{"injectables/AppService.html":{},"injectables/ConsumerService.html":{},"injectables/ValidationPipe.html":{}}}],["product",{"_index":61,"title":{"interfaces/Product.html":{},"interfaces/Product-1.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"coverage.html":{},"classes/validationExceptionFilter.html":{}}}],["product.interface",{"_index":395,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["productcondition",{"_index":334,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"miscellaneous/enumerations.html":{}}}],["productdto",{"_index":15,"title":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"coverage.html":{}}}],["productdto.title",{"_index":117,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/ConsumerService.html":{}}}],["productdto:productdto",{"_index":114,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/ConsumerService.html":{}}}],["productdto:productdto,@param('id",{"_index":123,"title":{},"body":{"controllers/AppController.html":{}}}],["productfor",{"_index":335,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"miscellaneous/enumerations.html":{}}}],["production",{"_index":592,"title":{},"body":{"index.html":{}}}],["productmodel",{"_index":261,"title":{},"body":{"injectables/ConsumerService.html":{}}}],["productmodel:model",{"_index":271,"title":{},"body":{"injectables/ConsumerService.html":{}}}],["products",{"_index":272,"title":{},"body":{"injectables/ConsumerService.html":{}}}],["productschema",{"_index":251,"title":{},"body":{"modules/ConsumerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["progressive",{"_index":566,"title":{},"body":{"index.html":{}}}],["project",{"_index":603,"title":{},"body":{"index.html":{}}}],["promise",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{}}}],["properties",{"_index":322,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["providers",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"modules/ConsumerModule.html":{},"overview.html":{}}}],["put",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["put(':id",{"_index":120,"title":{},"body":{"controllers/AppController.html":{}}}],["put(':id')@apiokresponse({description",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["quantity",{"_index":333,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["quantity:number",{"_index":341,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":397,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["queue",{"_index":197,"title":{},"body":{"injectables/AppService.html":{},"controllers/ConsumerController.html":{}}}],["queue:'products",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["queueoptions",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":613,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":84,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["really",{"_index":419,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["reason",{"_index":414,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["recieved",{"_index":91,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":581,"title":{},"body":{"index.html":{}}}],["request",{"_index":90,"title":{},"body":{"controllers/AppController.html":{},"classes/HttpExceptionFilter.html":{},"classes/validationExceptionFilter.html":{}}}],["request',httpstatus.bad_request",{"_index":135,"title":{},"body":{"controllers/AppController.html":{}}}],["request.url",{"_index":309,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/validationExceptionFilter.html":{}}}],["required",{"_index":428,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["required:false",{"_index":451,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["requirement",{"_index":399,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["res",{"_index":100,"title":{},"body":{"controllers/AppController.html":{}}}],["reset",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/ConsumerModule.html":{},"overview.html":{}}}],["resource",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["response",{"_index":295,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/validationExceptionFilter.html":{}}}],["result",{"_index":138,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"modules/ConsumerModule.html":{},"injectables/ConsumerService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/validationExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":140,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"modules/ConsumerModule.html":{},"injectables/ConsumerService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/validationExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":92,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{},"injectables/ValidationPipe.html":{}}}],["returns",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/ValidationPipe.html":{},"classes/validationExceptionFilter.html":{}}}],["rimraf",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":587,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["satus",{"_index":136,"title":{},"body":{"controllers/AppController.html":{}}}],["scalable",{"_index":571,"title":{},"body":{"index.html":{}}}],["schemas/product.schema",{"_index":252,"title":{},"body":{"modules/ConsumerModule.html":{}}}],["seems",{"_index":634,"title":{},"body":{"classes/validationExceptionFilter.html":{}}}],["sent",{"_index":402,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["server",{"_index":572,"title":{},"body":{"index.html":{}}}],["service",{"_index":191,"title":{},"body":{"injectables/AppService.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":421,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["side",{"_index":573,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"modules/ConsumerModule.html":{},"injectables/ConsumerService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"injectables/ValidationPipe.html":{},"index.html":{},"classes/validationExceptionFilter.html":{}}}],["sponsors",{"_index":606,"title":{},"body":{"index.html":{}}}],["start",{"_index":588,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":591,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":593,"title":{},"body":{"index.html":{}}}],["started",{"_index":565,"title":{"index.html":{}},"body":{}}],["starter",{"_index":580,"title":{},"body":{"index.html":{}}}],["state",{"_index":423,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["statements",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":104,"title":{},"body":{"controllers/AppController.html":{},"classes/HttpExceptionFilter.html":{},"classes/validationExceptionFilter.html":{}}}],["status(status",{"_index":303,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/validationExceptionFilter.html":{}}}],["statuscode",{"_index":305,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/validationExceptionFilter.html":{}}}],["stay",{"_index":616,"title":{},"body":{"index.html":{}}}],["string",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["successfully",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["such",{"_index":409,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["support",{"_index":607,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sure",{"_index":316,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["svg",{"_index":627,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":73,"title":{},"body":{"controllers/AppController.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"dependencies.html":{}}}],["table",{"_index":530,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":529,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":398,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["test",{"_index":596,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":599,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":598,"title":{},"body":{"index.html":{}}}],["tests",{"_index":595,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":605,"title":{},"body":{"index.html":{}}}],["then(res",{"_index":98,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.create(productdto",{"_index":119,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.delete(id",{"_index":130,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.getall",{"_index":93,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.getone(id",{"_index":97,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.update(id,productdto",{"_index":125,"title":{},"body":{"controllers/AppController.html":{}}}],["this.client.send('create',productdto).topromise",{"_index":203,"title":{},"body":{"injectables/AppService.html":{}}}],["this.client.send('delete',id).topromise",{"_index":207,"title":{},"body":{"injectables/AppService.html":{}}}],["this.client.send('getall','getall').topromise",{"_index":198,"title":{},"body":{"injectables/AppService.html":{}}}],["this.client.send('getone',id).topromise",{"_index":200,"title":{},"body":{"injectables/AppService.html":{}}}],["this.client.send('update',{id,productdto}).topromise",{"_index":205,"title":{},"body":{"injectables/AppService.html":{}}}],["this.consumerservice.create(productdto",{"_index":235,"title":{},"body":{"controllers/ConsumerController.html":{}}}],["this.consumerservice.delete(id",{"_index":241,"title":{},"body":{"controllers/ConsumerController.html":{}}}],["this.consumerservice.getall(msg",{"_index":231,"title":{},"body":{"controllers/ConsumerController.html":{}}}],["this.consumerservice.getone(id",{"_index":233,"title":{},"body":{"controllers/ConsumerController.html":{}}}],["this.consumerservice.update(postdata.id",{"_index":238,"title":{},"body":{"controllers/ConsumerController.html":{}}}],["this.productmodel(productdto",{"_index":280,"title":{},"body":{"injectables/ConsumerService.html":{}}}],["this.productmodel.find",{"_index":276,"title":{},"body":{"injectables/ConsumerService.html":{}}}],["this.productmodel.findbyidandremove({_id:id",{"_index":283,"title":{},"body":{"injectables/ConsumerService.html":{}}}],["this.productmodel.findbyidandupdate(id,productdto,{new:true",{"_index":282,"title":{},"body":{"injectables/ConsumerService.html":{}}}],["this.productmodel.findone({_id:id",{"_index":278,"title":{},"body":{"injectables/ConsumerService.html":{}}}],["this.tovalidate(metatype",{"_index":503,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["throw",{"_index":106,"title":{},"body":{"controllers/AppController.html":{},"injectables/ValidationPipe.html":{}}}],["timestamp",{"_index":306,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/validationExceptionFilter.html":{}}}],["title",{"_index":116,"title":{},"body":{"controllers/AppController.html":{},"injectables/ConsumerService.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["title:string",{"_index":337,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"miscellaneous/variables.html":{}}}],["touch",{"_index":617,"title":{},"body":{"index.html":{}}}],["tovalidate",{"_index":487,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["tovalidate(metatype",{"_index":489,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["trade",{"_index":454,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["transform",{"_index":488,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform(value",{"_index":493,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transformer",{"_index":502,"title":{},"body":{"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["transport",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["transport:transport.rmq",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":362,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["try",{"_index":638,"title":{},"body":{"classes/validationExceptionFilter.html":{}}}],["try'})@isstring()@isnotempty",{"_index":469,"title":{},"body":{"classes/ProductDto-1.html":{}}}],["twitter",{"_index":623,"title":{},"body":{"index.html":{}}}],["type",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"classes/validationExceptionFilter.html":{}}}],["type:string",{"_index":443,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["types",{"_index":511,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["types.includes(metatype",{"_index":513,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["types/dotenv",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":579,"title":{},"body":{"index.html":{}}}],["ui",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":494,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["unisex",{"_index":448,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"miscellaneous/enumerations.html":{}}}],["unisex=\"unisex",{"_index":351,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{}}}],["unit",{"_index":594,"title":{},"body":{"index.html":{}}}],["up",{"_index":422,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["update",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ConsumerController.html":{},"injectables/ConsumerService.html":{}}}],["update(@body(validationpipe",{"_index":122,"title":{},"body":{"controllers/AppController.html":{}}}],["update(id",{"_index":188,"title":{},"body":{"injectables/AppService.html":{},"injectables/ConsumerService.html":{}}}],["update(id:string",{"_index":204,"title":{},"body":{"injectables/AppService.html":{},"injectables/ConsumerService.html":{}}}],["update(postdata",{"_index":221,"title":{},"body":{"controllers/ConsumerController.html":{}}}],["update(postdata:{id:string,productdto:productdto}):promise",{"_index":236,"title":{},"body":{"controllers/ConsumerController.html":{}}}],["update(productdto",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["updated",{"_index":121,"title":{},"body":{"controllers/AppController.html":{}}}],["updated'})@apiforbiddenresponse({description",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["urls:['amqp://guest:guest@localhost:5672/vhost",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":459,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"miscellaneous/enumerations.html":{}}}],["used=\"used",{"_index":353,"title":{},"body":{"interfaces/Product.html":{},"interfaces/Product-1.html":{}}}],["usefilters",{"_index":55,"title":{},"body":{"controllers/AppController.html":{}}}],["usefilters(httpexceptionfilter",{"_index":80,"title":{},"body":{"controllers/AppController.html":{}}}],["usefilters(validationexceptionfilter",{"_index":112,"title":{},"body":{"controllers/AppController.html":{}}}],["usefindandmodify:false",{"_index":255,"title":{},"body":{"modules/ConsumerModule.html":{}}}],["validate",{"_index":500,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validate(object",{"_index":507,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validation",{"_index":400,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["validationexceptionfilter",{"_index":71,"title":{"classes/validationExceptionFilter.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{},"classes/validationExceptionFilter.html":{}}}],["validationpipe",{"_index":63,"title":{"injectables/ValidationPipe.html":{}},"body":{"controllers/AppController.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["validator",{"_index":394,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["value",{"_index":497,"title":{},"body":{"injectables/ValidationPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":518,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":640,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":294,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/validationExceptionFilter.html":{}}}],["watch",{"_index":589,"title":{},"body":{"index.html":{}}}],["website",{"_index":621,"title":{},"body":{"index.html":{}}}],["well",{"_index":408,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["white'})@isstring",{"_index":465,"title":{},"body":{"classes/ProductDto-1.html":{}}}],["whome",{"_index":445,"title":{},"body":{"classes/ProductDto.html":{},"classes/ProductDto-1.html":{}}}],["without",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["you'd",{"_index":610,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/ConsumerModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/client/src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(productDto: ProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({description: 'The resource has been successfully created'})@ApiForbiddenResponse({description: 'Forbidden'})@UseFilters(validationExceptionFilter)\n                \n            \n\n            \n                \n                    Defined in apps/client/src/app.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productDto\n                                    \n                                                ProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOkResponse({description: 'The resource has been successfully deleted'})@ApiForbiddenResponse({description: 'Forbidden'})\n                \n            \n\n            \n                \n                    Defined in apps/client/src/app.controller.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'The resource list has been successfully delivered'})@ApiForbiddenResponse({description: 'Forbidden'})\n                \n            \n\n            \n                \n                    Defined in apps/client/src/app.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOne\n                        \n                        \n                    \n                \n            \n            \n                \ngetOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({description: 'The resource has been successfully delivered'})@ApiForbiddenResponse({description: 'Forbidden'})\n                \n            \n\n            \n                \n                    Defined in apps/client/src/app.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(productDto: ProductDto, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiOkResponse({description: 'The resource has been successfully updated'})@ApiForbiddenResponse({description: 'Forbidden'})@UseFilters(validationExceptionFilter)\n                \n            \n\n            \n                \n                    Defined in apps/client/src/app.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productDto\n                                    \n                                                ProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Put, Delete, Logger, Body, Param, UseFilters, HttpException,HttpStatus } from '@nestjs/common';\nimport { AppService } from './app.service';\n\nimport {ProductDto} from './dto/product.dto';\nimport { Product } from './interfaces/product.interface';\nimport { ValidationPipe } from './pipes/validation.pipe';\n\nconst logger = new Logger('client-controller');\n\n// Exceptions\nimport { HttpExceptionFilter } from './exceptions/httpException.filter';\nimport { validationExceptionFilter} from './exceptions/validationException.filte';\n\n// Swagger\nimport { ApiCreatedResponse, ApiForbiddenResponse, ApiOkResponse, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Producer')\n@Controller()\n@UseFilters(HttpExceptionFilter)\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  @ApiOkResponse({description:'The resource list has been successfully delivered'})\n  @ApiForbiddenResponse({description:'Forbidden'})\n  getAll():Promise{\n    logger.log('GET request recieved');\n    return this.appService.getAll();\n  }\n\n  @Get(':id')\n  @ApiOkResponse({description:'The resource has been successfully delivered'})\n  @ApiForbiddenResponse({description:'Forbidden'})\n  getOne(@Param('id') id:string):Promise{\n    logger.log('GET request recieved');\n    return this.appService.getOne(id)\n    .then(res =>{\n      if(res){\n        return res;\n      } \n      else{\n        logger.log(`requseted data not found with status ${HttpStatus.NOT_FOUND}`);\n        throw new HttpException('Product not found',HttpStatus.NOT_FOUND);\n      } \n      \n    })\n    .catch(()=>{\n      logger.log(`requseted data not found with status ${HttpStatus.NOT_FOUND}`);\n      throw new HttpException('Product not found',HttpStatus.NOT_FOUND);\n    })\n  }\n  \n  @Post()\n  @ApiCreatedResponse({description:'The resource has been successfully created'})\n  @ApiForbiddenResponse({description:'Forbidden'})\n  @UseFilters(validationExceptionFilter)\n  create(@Body(ValidationPipe) productDto:ProductDto){\n      logger.log(`POST request recieved with Title ${productDto.title}`);\n      const postData = this.appService.create(productDto);\n\n      return postData;\n  }\n\n  @Put(':id')\n  @ApiOkResponse({description:'The resource has been successfully updated'})\n  @ApiForbiddenResponse({description:'Forbidden'})\n  @UseFilters(validationExceptionFilter)\n  update(@Body(ValidationPipe) productDto:ProductDto,@Param('id') id:string):Promise{\n    logger.log(`PUT request recieved for ${id}`);\n    return this.appService.update(id,productDto);\n  }\n\n  @Delete(':id')\n  @ApiOkResponse({description:'The resource has been successfully deleted'})\n  @ApiForbiddenResponse({description:'Forbidden'})\n  delete(@Param('id') id:string):Promise{\n    logger.log(`DELETE request recieved for ${id}`);\n    return this.appService.delete(id)\n    .then(res =>{\n      if(res){\n        return res;\n      } \n      else{\n        logger.log(`invalid request with Status code ${HttpStatus.BAD_REQUEST}`);\n        throw new HttpException('BAD Request',HttpStatus.BAD_REQUEST);\n      } \n      \n    })\n    .catch(()=>{\n      logger.log(`Invalid request with Satus code ${HttpStatus.BAD_REQUEST}`);\n      throw new HttpException('Product not found',HttpStatus.BAD_REQUEST);\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_exports\n\n\n\n\nAppService \n\nAppService \n\n\n\nAppModule\n\nAppModule\n\nAppService  -->\n\nAppModule->AppService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/client/src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AppService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\n// do without importing consumers module\nimport { Transport, ClientsModule} from '@nestjs/microservices'\n\n@Module({\n  imports: [\n    ClientsModule.register([{\n      name:'products',\n      transport:Transport.RMQ,\n      options:{\n        urls:['amqp://guest:guest@localhost:5672/vhost'],\n        queue:'products-messages',\n        queueOptions:{\n          durable: false\n        }\n      }\n    }])\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n  exports:[AppService]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/client/src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in apps/client/src/app.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(productDto: ProductDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/client/src/app.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productDto\n                                    \n                                                ProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/client/src/app.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in apps/client/src/app.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOne\n                        \n                        \n                    \n                \n            \n            \n                \ngetOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/client/src/app.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, productDto: ProductDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/client/src/app.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productDto\n                                    \n                                                ProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from '@nestjs/common';\n\nimport { ClientProxy} from '@nestjs/microservices';\n\nimport { Product } from './interfaces/product.interface';\nimport { ProductDto} from './dto/product.dto';\n\nconst logger = new Logger('client-service');\n\n@Injectable()\nexport class AppService {\n\n  constructor(@Inject('products') private readonly client:ClientProxy){};\n\n  getAll(){\n    logger.log('Sending GET Job to Queue');\n    return this.client.send('getAll','getAll').toPromise();\n  }\n\n  getOne(id:string){\n    logger.log('Sending GET Job to Queue');\n    return this.client.send('getOne',id).toPromise();\n  }\n  \n  create(productDto:ProductDto){\n    logger.log(`sending POST Job to Queue for ${productDto.title}`);\n    return this.client.send('create',productDto).toPromise();\n    \n  }\n\n  update(id:string, productDto:ProductDto){\n    logger.log(`sending PUT Job to Queue for ${id}`);\n    const postData ={}\n    return this.client.send('update',{id,productDto}).toPromise();\n  }\n  delete(id:string){\n    logger.log(`sending DELETE Job to Queue for ${id}`);\n    return this.client.send('delete',id).toPromise();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ConsumerController.html":{"url":"controllers/ConsumerController.html","title":"controller - ConsumerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ConsumerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/consumer/src/consumer.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(productDto: ProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('create')\n                \n            \n\n            \n                \n                    Defined in apps/consumer/src/consumer.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productDto\n                                    \n                                                ProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('delete')\n                \n            \n\n            \n                \n                    Defined in apps/consumer/src/consumer.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(msg: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('getAll')\n                \n            \n\n            \n                \n                    Defined in apps/consumer/src/consumer.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('getOne')\n                \n            \n\n            \n                \n                    Defined in apps/consumer/src/consumer.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(postData: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('update')\n                \n            \n\n            \n                \n                    Defined in apps/consumer/src/consumer.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    postData\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Logger, Get, Body, Param } from '@nestjs/common';\nimport { ConsumerService } from './consumer.service';\n\nimport { Product } from './interfaces/product.interface';\nimport { ProductDto } from './dto/product.dto';\nimport { MessagePattern } from '@nestjs/microservices';\n\nconst logger = new Logger('consumer-controller');\n\n@Controller()\nexport class ConsumerController {\n  constructor(private readonly consumerService: ConsumerService) {}\n\n  @MessagePattern('getAll')\n  async getAll(msg:string):Promise {\n    logger.log(`Picking GET Job from Queue`);\n    return this.consumerService.getAll(msg);\n  }\n\n  @MessagePattern('getOne')\n  async getOne(id:string):Promise{\n    logger.log(`picking GET Job from Queue for ${id}`);\n    return this.consumerService.getOne(id);\n  }\n\n  @MessagePattern('create')\n  async create(productDto:ProductDto): Promise{\n    logger.log(`Picking POST Job from Queue`);\n    return await this.consumerService.create(productDto);\n  }\n\n  @MessagePattern('update')\n  async update(postData:{id:string,productDto:ProductDto}):Promise{\n    logger.log(`Picking PUT Job from Queue for ${postData.id}`);\n    return await this.consumerService.update(postData.id, postData.productDto);\n  }\n  @MessagePattern('delete')\n  async delete(id:string):Promise{\n    logger.log(`picking DELETE Job from Queue for ${id}`);\n    return await this.consumerService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsumerModule.html":{"url":"modules/ConsumerModule.html","title":"module - ConsumerModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsumerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConsumerModule\n\n\n\ncluster_ConsumerModule_providers\n\n\n\n\nConsumerService\n\nConsumerService\n\n\n\nConsumerModule\n\nConsumerModule\n\nConsumerModule -->\n\nConsumerService->ConsumerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/consumer/src/consumer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConsumerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ConsumerController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConsumerController } from './consumer.controller';\nimport { ConsumerService } from './consumer.service';\nimport { ConfigModule } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ProductSchema} from './schemas/product.schema';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({isGlobal:true}),\n    MongooseModule.forRoot(process.env.MONGO_URI, {useFindAndModify:false}),\n    MongooseModule.forFeature([{name:'Product',schema:ProductSchema}])\n  ],\n  controllers: [ConsumerController],\n  providers: [ConsumerService],\n})\nexport class ConsumerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsumerService.html":{"url":"injectables/ConsumerService.html","title":"injectable - ConsumerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsumerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/consumer/src/consumer.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/consumer/src/consumer.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(productDto: ProductDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/consumer/src/consumer.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productDto\n                                    \n                                                ProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/consumer/src/consumer.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll(msg: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/consumer/src/consumer.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Product[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOne\n                        \n                        \n                    \n                \n            \n            \n                \ngetOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/consumer/src/consumer.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Product\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, productDto: ProductDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/consumer/src/consumer.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productDto\n                                    \n                                                ProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Product } from './interfaces/product.interface';\nimport { ProductDto } from './dto/product.dto';\nconst logger = new Logger('consumer_service');\n\n@Injectable()\nexport class ConsumerService {\n  \n  constructor(@InjectModel('Product') private readonly productModel:Model){}\n\n  //products: Product[] = [];\n\n  getAll(msg:string):Product[] {\n    logger.log(`GET Job Done by ${msg}`);\n    return this.productModel.find();\n  }\n\n  getOne(id:string):Product {\n    logger.log(`GET Job Done by ${id}`);\n    return this.productModel.findOne({_id:id});\n  }\n\n  async create(productDto:ProductDto) : Promise{\n    const newProduct = new this.productModel(productDto);\n    logger.log(`POST Job Done with Title ${productDto.title}`);\n    return await newProduct.save();\n  }\n\n  async update(id:string, productDto:ProductDto): Promise{\n    logger.log(`PUT Job Done for id ${id}`);\n    return await this.productModel.findByIdAndUpdate(id,productDto,{new:true});\n  }\n  async delete(id:string):Promise{\n    logger.log(`DELETE Job done for ${id}`);\n    return await this.productModel.findByIdAndRemove({_id:id});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/client/src/exceptions/httpException.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in apps/client/src/exceptions/httpException.filter.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost, HttpException } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus();\n\n    response\n      .status(status)\n      .json({\n        statusCode: status,\n        timestamp: new Date().toISOString(),\n        path: request.url,\n        message:'Invalid Request | Bad Request | Others. Also check out your inputs and make sure you have entered correct data'\n      });\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Product.html":{"url":"interfaces/Product.html","title":"interface - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/client/src/interfaces/product.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        brand\n                                \n                                \n                                        color\n                                \n                                \n                                        condition\n                                \n                                \n                                        currency\n                                \n                                \n                                        description\n                                \n                                \n                                        gender\n                                \n                                \n                                            Optional\n                                        gtin\n                                \n                                \n                                        link\n                                \n                                \n                                            Optional\n                                        mpn\n                                \n                                \n                                        price\n                                \n                                \n                                        quantity\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        brand\n                                    \n                                \n                                \n                                    \n                                        brand:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        condition\n                                    \n                                \n                                \n                                    \n                                        condition:     ProductCondition[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProductCondition[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                    \n                                \n                                \n                                    \n                                        currency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                    \n                                \n                                \n                                    \n                                        gender:     ProductFor[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProductFor[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gtin\n                                    \n                                \n                                \n                                    \n                                        gtin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mpn\n                                    \n                                \n                                \n                                    \n                                        mpn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                    \n                                \n                                \n                                    \n                                        price:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Product{\n    title:string;\n    description: string;\n    link:string;\n    price:string;\n    currency:string;\n    quantity:number;\n    brand:string;\n    color:string;\n    gender:ProductFor[];\n    gtin?:string;\n    mpn?:string;\n    condition:ProductCondition[];\n}\n\nexport enum ProductFor {\n    Male=\"Male\",\n    Female=\"Female\",\n    Unisex=\"Unisex\"\n}\n\nexport enum ProductCondition {\n    New=\"New\",\n    Used=\"Used\"\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Product-1.html":{"url":"interfaces/Product-1.html","title":"interface - Product-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/consumer/src/interfaces/product.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        brand\n                                \n                                \n                                        color\n                                \n                                \n                                        condition\n                                \n                                \n                                        currency\n                                \n                                \n                                        description\n                                \n                                \n                                        gender\n                                \n                                \n                                            Optional\n                                        gtin\n                                \n                                \n                                        link\n                                \n                                \n                                            Optional\n                                        mpn\n                                \n                                \n                                        price\n                                \n                                \n                                        quantity\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        brand\n                                    \n                                \n                                \n                                    \n                                        brand:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        condition\n                                    \n                                \n                                \n                                    \n                                        condition:     ProductCondition[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProductCondition[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                    \n                                \n                                \n                                    \n                                        currency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                    \n                                \n                                \n                                    \n                                        gender:     ProductFor[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProductFor[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gtin\n                                    \n                                \n                                \n                                    \n                                        gtin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mpn\n                                    \n                                \n                                \n                                    \n                                        mpn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                    \n                                \n                                \n                                    \n                                        price:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Product{\n    title:string;\n    description: string;\n    link:string;\n    price:string;\n    currency:string;\n    quantity:number;\n    brand:string;\n    color:string;\n    gender:ProductFor[];\n    gtin?:string;\n    mpn?:string;\n    condition:ProductCondition[];\n}\n\nexport enum ProductFor {\n    Male=\"Male\",\n    Female=\"Female\",\n    Unisex=\"Unisex\"\n}\n\nexport enum ProductCondition {\n    New=\"New\",\n    Used=\"Used\"\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductDto.html":{"url":"classes/ProductDto.html","title":"class - ProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/consumer/src/dto/product.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                brand\n                            \n                            \n                                    Readonly\n                                color\n                            \n                            \n                                    Readonly\n                                condition\n                            \n                            \n                                    Readonly\n                                currency\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                gender\n                            \n                            \n                                    Readonly\n                                gtin\n                            \n                            \n                                    Readonly\n                                link\n                            \n                            \n                                    Readonly\n                                mpn\n                            \n                            \n                                    Readonly\n                                price\n                            \n                            \n                                    Readonly\n                                quantity\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            brand\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/consumer/src/dto/product.dto.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/consumer/src/dto/product.dto.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            condition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ProductCondition[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEnum(ProductCondition, {each: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/consumer/src/dto/product.dto.ts:125\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            currency\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/consumer/src/dto/product.dto.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/consumer/src/dto/product.dto.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ProductFor[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEnum(ProductFor, {each: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/consumer/src/dto/product.dto.ts:99\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            gtin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/consumer/src/dto/product.dto.ts:108\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/consumer/src/dto/product.dto.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            mpn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/consumer/src/dto/product.dto.ts:117\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/consumer/src/dto/product.dto.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            quantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@IsNotEmpty()@Min(1, {message: 'Quantity must be at least 1'})@Max(100, {message: 'Quantity can not exceed 100'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/consumer/src/dto/product.dto.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()@Length(5, 50, {message: 'Title should be between 5 and 50 charactors'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/consumer/src/dto/product.dto.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsNotEmpty, IsNumber, IsOptional, IsString, IS_ENUM, Length, Max, Min} from 'class-validator';\n\n// get enum defined in product.interface \nimport { ProductFor, ProductCondition } from './../interfaces/product.interface';\n\n// Swagger \n//import { ApiProperty } from '@nestjs/swagger';\nimport { query } from 'express';\n\n/* \nTask Requirement for data validation as in product.interface\n\n    1- data being sent to database must be either string or number depending on the requirement mentioned in product.interface\n    2- for String parameters, it must not be empty as well such as title can not be empty due to business logic, consumers \n    would not be interested in a product with no title. however, due to any reason, product description may be empty.\n    3- For Quantity, I have put arbitrary validation requirement such as minimum quantity of at least 1 and \n    maximum quantity of 100 only, However this really depends on business logic which can be set up at any state.\n    4- For Swagger Documentation I have put mpn and gtin fields only as optional and i assume all other fields are required as per requirement\n*/\nexport class ProductDto {\n    /* @ApiProperty({\n        type: String,\n        description:'Product Title. Number of Characters greater than 5 and less than 50 ',\n        default:''\n    }) */\n    @IsString()\n    @IsNotEmpty()\n    @Length(5,50,{message:'Title should be between 5 and 50 charactors'})\n    readonly title:string;\n\n    /* @ApiProperty({\n        type: String,\n        description:'Product Description ',\n        default:''\n    }) */\n    @IsString()\n    readonly description: string;\n\n    /* @ApiProperty({\n        type: String,\n        description:'Product Link',\n        default:''\n    }) */\n    @IsString()\n    readonly link: string;\n\n   /*  @ApiProperty({\n        type: String,\n        description:'Product Price.',\n        default:'100'\n    }) */\n    @IsString()\n    @IsNotEmpty()\n    readonly price:string;\n\n    /* @ApiProperty({\n        type: String,\n        description:'Product Price Currency ',\n        default:''\n    }) */\n    @IsString()\n    @IsNotEmpty()\n    readonly currency: string;\n\n    /* @ApiProperty({\n        type: Number,\n        description:'Product Quantity which must be greater than 0 and less than 101',\n        default:1\n    }) */\n    @IsNumber()\n    @IsNotEmpty()\n    @Min(1,{message:'Quantity must be at least 1'})\n    @Max(100,{message:'Quantity can not exceed 100'})\n    readonly quantity: number;\n\n    /* @ApiProperty({\n        type: String,\n        description:'Product Brand ',\n        default:''\n    }) */\n    @IsString()\n    readonly brand: string;\n\n    /* @ApiProperty({\n        type: String,\n        description:'Product Color ',\n        default:'White'\n    }) */\n    @IsString()\n    readonly color:string;\n\n    /* @ApiProperty({\n        type:String,\n        description:'Gender: For Whome this product is For? Male / Female Or Unisex ',\n        default:'Male'\n        \n    }) */\n    @IsEnum(ProductFor,{each:true})\n    readonly gender: ProductFor[];\n\n    /* @ApiProperty({\n        type: String,\n        required:false,\n        description:'Product GTIN : Gloabal Item Trade Number'\n    }) */\n    @IsString()\n    @IsOptional()\n    readonly gtin:string;\n\n    /* @ApiProperty({\n        type: String,\n        required:false,\n        description:'Product MPN: Manufacturing Part Number '\n    }) */\n    @IsString()\n    @IsOptional()\n    readonly mpn:string;\n\n    /* @ApiProperty({\n        type: String,\n        description:'Product Condition, which can be New or Used ',\n        default:'New'\n    }) */\n    @IsEnum(ProductCondition,{each:true})\n    readonly condition:ProductCondition[];\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductDto-1.html":{"url":"classes/ProductDto-1.html","title":"class - ProductDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/client/src/dto/product.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                brand\n                            \n                            \n                                    Readonly\n                                color\n                            \n                            \n                                    Readonly\n                                condition\n                            \n                            \n                                    Readonly\n                                currency\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                gender\n                            \n                            \n                                    Readonly\n                                gtin\n                            \n                            \n                                    Readonly\n                                link\n                            \n                            \n                                    Readonly\n                                mpn\n                            \n                            \n                                    Readonly\n                                price\n                            \n                            \n                                    Readonly\n                                quantity\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            brand\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: String, description: 'Product Brand ', default: ''})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/client/src/dto/product.dto.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: String, description: 'Product Color ', default: 'White'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/client/src/dto/product.dto.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            condition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ProductCondition[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: String, description: 'Product Condition, which can be New or Used ', default: 'New'})@IsEnum(ProductCondition, {each: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/client/src/dto/product.dto.ts:125\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            currency\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: String, description: 'Product Price Currency ', default: 'TRY'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/client/src/dto/product.dto.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: String, description: 'Product Description ', default: ''})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/client/src/dto/product.dto.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ProductFor[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: String, description: 'Gender: For Whome this product is For? Male / Female Or Unisex ', default: 'Male'})@IsEnum(ProductFor, {each: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/client/src/dto/product.dto.ts:99\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            gtin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: String, required: false, description: 'Product GTIN : Gloabal Item Trade Number'})@IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/client/src/dto/product.dto.ts:108\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: String, description: 'Product Link', default: ''})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/client/src/dto/product.dto.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            mpn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: String, required: false, description: 'Product MPN: Manufacturing Part Number '})@IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/client/src/dto/product.dto.ts:117\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: String, description: 'Product Price.', default: '0'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/client/src/dto/product.dto.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            quantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: Number, description: 'Product Quantity which must be greater than 0 and less than 101', default: 0})@IsNumber()@IsNotEmpty()@Min(1, {message: 'Quantity must be at least 1'})@Max(100, {message: 'Quantity can not exceed 100'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/client/src/dto/product.dto.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: String, description: 'Product Title. Number of Characters greater than 5 and less than 50 ', default: ''})@IsString()@IsNotEmpty()@Length(5, 50, {message: 'Title should be between 5 and 50 charactors'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/client/src/dto/product.dto.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsNotEmpty, IsNumber, IsOptional, IsString, IS_ENUM, Length, Max, Min} from 'class-validator';\n\n// get enum defined in product.interface \nimport { ProductFor, ProductCondition } from './../interfaces/product.interface';\n\n// Swagger \nimport { ApiProperty } from '@nestjs/swagger';\nimport { query } from 'express';\n\n/* \nTask Requirement for data validation as in product.interface\n\n    1- data being sent to database must be either string or number depending on the requirement mentioned in product.interface\n    2- for String parameters, it must not be empty as well such as title can not be empty due to business logic, consumers \n    would not be interested in a product with no title. however, due to any reason, product description may be empty.\n    3- For Quantity, I have put arbitrary validation requirement such as minimum quantity of at least 1 and \n    maximum quantity of 100 only, However this really depends on business logic which can be set up at any state.\n    4- For Swagger Documentation I have put mpn and gtin fields only as optional and i assume all other fields are required as per requirement\n*/\nexport class ProductDto {\n    @ApiProperty({\n        type: String,\n        description:'Product Title. Number of Characters greater than 5 and less than 50 ',\n        default:''\n    })\n    @IsString()\n    @IsNotEmpty()\n    @Length(5,50,{message:'Title should be between 5 and 50 charactors'})\n    readonly title:string;\n\n    @ApiProperty({\n        type: String,\n        description:'Product Description ',\n        default:''\n    })\n    @IsString()\n    readonly description: string;\n\n    @ApiProperty({\n        type: String,\n        description:'Product Link',\n        default:''\n    })\n    @IsString()\n    readonly link: string;\n\n    @ApiProperty({\n        type: String,\n        description:'Product Price.',\n        default:'0'\n    })\n    @IsString()\n    @IsNotEmpty()\n    readonly price:string;\n\n    @ApiProperty({\n        type: String,\n        description:'Product Price Currency ',\n        default:'TRY'\n    })\n    @IsString()\n    @IsNotEmpty()\n    readonly currency: string;\n\n    @ApiProperty({\n        type: Number,\n        description:'Product Quantity which must be greater than 0 and less than 101',\n        default:0\n    })\n    @IsNumber()\n    @IsNotEmpty()\n    @Min(1,{message:'Quantity must be at least 1'})\n    @Max(100,{message:'Quantity can not exceed 100'})\n    readonly quantity: number;\n\n    @ApiProperty({\n        type: String,\n        description:'Product Brand ',\n        default:''\n    })\n    @IsString()\n    readonly brand: string;\n\n    @ApiProperty({\n        type: String,\n        description:'Product Color ',\n        default:'White'\n    })\n    @IsString()\n    readonly color:string;\n\n    @ApiProperty({\n        type:String,\n        description:'Gender: For Whome this product is For? Male / Female Or Unisex ',\n        default:'Male'\n        \n    })\n    @IsEnum(ProductFor,{each:true})\n    readonly gender: ProductFor[];\n\n    @ApiProperty({\n        type: String,\n        required:false,\n        description:'Product GTIN : Gloabal Item Trade Number'\n    })\n    @IsString()\n    @IsOptional()\n    readonly gtin:string;\n\n    @ApiProperty({\n        type: String,\n        required:false,\n        description:'Product MPN: Manufacturing Part Number '\n    })\n    @IsString()\n    @IsOptional()\n    readonly mpn:string;\n\n    @ApiProperty({\n        type: String,\n        description:'Product Condition, which can be New or Used ',\n        default:'New'\n    })\n    @IsEnum(ProductCondition,{each:true})\n    readonly condition:ProductCondition[];\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationPipe.html":{"url":"injectables/ValidationPipe.html","title":"injectable - ValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/client/src/pipes/validation.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toValidate\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            toValidate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toValidate(metatype: any)\n                \n            \n\n\n            \n                \n                    Defined in apps/client/src/pipes/validation.pipe.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metatype\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, undefined: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in apps/client/src/pipes/validation.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, ArgumentMetadata, BadRequestException } from '@nestjs/common';\nimport { validate } from 'class-validator';\nimport { plainToClass } from 'class-transformer';\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n  async transform(value: any, { metatype }: ArgumentMetadata) {\n    if (!metatype || !this.toValidate(metatype)) {\n      return value;\n    }\n    const object = plainToClass(metatype, value);\n    const errors = await validate(object);\n    if (errors.length > 0) {\n      throw new BadRequestException('Validation failed');\n    }\n    return value;\n  }\n\n  private toValidate(metatype: any): boolean {\n    const types: any[] = [String, Boolean, Number, Array, Object];\n    return !types.includes(metatype);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/client/src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/client/src/app.controller.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/client/src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/client/src/app.service.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/client/src/dto/product.dto.ts\n            \n            class\n            ProductDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                apps/client/src/exceptions/httpException.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/client/src/exceptions/validationException.filte.ts\n            \n            class\n            validationExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/client/src/interfaces/product.interface.ts\n            \n            interface\n            Product\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                apps/client/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/client/src/main.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/client/src/pipes/validation.pipe.ts\n            \n            injectable\n            ValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/consumer/src/consumer.controller.ts\n            \n            controller\n            ConsumerController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/consumer/src/consumer.controller.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/consumer/src/consumer.service.ts\n            \n            injectable\n            ConsumerService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/consumer/src/consumer.service.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/consumer/src/dto/product.dto.ts\n            \n            class\n            ProductDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                apps/consumer/src/interfaces/product.interface.ts\n            \n            interface\n            Product\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                apps/consumer/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/consumer/src/main.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/consumer/src/schemas/product.schema.ts\n            \n            variable\n            ProductSchema\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/microservices : ^7.5.1\n        \n            @nestjs/mongoose : ^7.0.2\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/swagger : ^4.7.0\n        \n            @types/dotenv : ^8.2.0\n        \n            amqp-connection-manager : ^3.2.1\n        \n            amqplib : ^0.6.0\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            dotenv : ^8.2.0\n        \n            mongoose : ^5.10.13\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            swagger-ui-express : ^4.1.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ProductCondition   (apps/.../product.interface.ts)\n                        \n                        \n                            ProductCondition   (apps/.../product.interface.ts)\n                        \n                        \n                            ProductFor   (apps/.../product.interface.ts)\n                        \n                        \n                            ProductFor   (apps/.../product.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/client/src/interfaces/product.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        ProductCondition\n                    \n                \n                        \n                            \n                                 New\n                            \n                        \n                        \n                            \n                                Value : New\n                            \n                        \n                        \n                            \n                                 Used\n                            \n                        \n                        \n                            \n                                Value : Used\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ProductFor\n                    \n                \n                        \n                            \n                                 Male\n                            \n                        \n                        \n                            \n                                Value : Male\n                            \n                        \n                        \n                            \n                                 Female\n                            \n                        \n                        \n                            \n                                Value : Female\n                            \n                        \n                        \n                            \n                                 Unisex\n                            \n                        \n                        \n                            \n                                Value : Unisex\n                            \n                        \n            \n        \n\n    apps/consumer/src/interfaces/product.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        ProductCondition\n                    \n                \n                        \n                            \n                                 New\n                            \n                        \n                        \n                            \n                                Value : New\n                            \n                        \n                        \n                            \n                                 Used\n                            \n                        \n                        \n                            \n                                Value : Used\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ProductFor\n                    \n                \n                        \n                            \n                                 Male\n                            \n                        \n                        \n                            \n                                Value : Male\n                            \n                        \n                        \n                            \n                                 Female\n                            \n                        \n                        \n                            \n                                Value : Female\n                            \n                        \n                        \n                            \n                                 Unisex\n                            \n                        \n                        \n                            \n                                Value : Unisex\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/client/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/consumer/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsumerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ConsumerModule\n\n\n\ncluster_ConsumerModule_providers\n\n\n\n\nAppService \n\nAppService \n\n\n\nAppModule\n\nAppModule\n\nAppService  -->\n\nAppModule->AppService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nConsumerService\n\nConsumerService\n\n\n\nConsumerModule\n\nConsumerModule\n\nConsumerModule -->\n\nConsumerService->ConsumerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/validationExceptionFilter.html":{"url":"classes/validationExceptionFilter.html","title":"class - validationExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  validationExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/client/src/exceptions/validationException.filte.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in apps/client/src/exceptions/validationException.filte.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost,BadRequestException,HttpException } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch(BadRequestException)\nexport class validationExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus();\n\n    response\n      .status(status)\n      .json({\n        statusCode: status,\n        timestamp: new Date().toISOString(),\n        path: request.url,\n        description:\"Oops ! Seems you have not entered product data correctly OR missed some important data fields. Please check and try again\"\n      });\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            logger   (apps/.../app.controller.ts)\n                        \n                        \n                            logger   (apps/.../app.service.ts)\n                        \n                        \n                            logger   (apps/.../main.ts)\n                        \n                        \n                            logger   (apps/.../consumer.controller.ts)\n                        \n                        \n                            logger   (apps/.../consumer.service.ts)\n                        \n                        \n                            logger   (apps/.../main.ts)\n                        \n                        \n                            ProductSchema   (apps/.../product.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/client/src/app.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('client-controller')\n                        \n                    \n\n\n            \n        \n\n    apps/client/src/app.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('client-service')\n                        \n                    \n\n\n            \n        \n\n    apps/client/src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('client')\n                        \n                    \n\n\n            \n        \n\n    apps/consumer/src/consumer.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('consumer-controller')\n                        \n                    \n\n\n            \n        \n\n    apps/consumer/src/consumer.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('consumer_service')\n                        \n                    \n\n\n            \n        \n\n    apps/consumer/src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('consumer')\n                        \n                    \n\n\n            \n        \n\n    apps/consumer/src/schemas/product.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ProductSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    title:String,\n    description: String,\n    link:String,\n    price:String,\n    currency:String,\n    quantity:Number,\n    brand:String,\n    color:String,\n    gender:String,\n    gtin:String,\n    mpn:String,\n    condition:String,\n})\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
